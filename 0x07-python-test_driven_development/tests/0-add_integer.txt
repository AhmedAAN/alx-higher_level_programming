The ''0-add_integer'' module
============================
Using ''add_integer''
---------------------

First import ``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

The function works as "+":
    >>> add_integer(2, 3)
    5

    >>> add_integer(2, -3)
    -1

The function worls with floats:
    >>> add_integer(2.0, 3.0)
    5
    
    >>> add_integer(2.0, -3.0)
    -1

Floats will be casted to integers before addition:
    >>> add_integer(2.9, 3.9)
    5

Floats and integers can be combined:
    >>> add_integer(2.6, 3)
    5

The second argument is optional (equals 98):
    >>> add_integer(2)
    100

Errors
------

If one argument is not intger or float, TypeError is raised:
    >>> add_integer("hello", 3)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(2, "hello")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(2, "3")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer("hello")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

If both arguments are not numbers, TypeError for the first argument is raised:
    >>> add_integer("hello", "world")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer